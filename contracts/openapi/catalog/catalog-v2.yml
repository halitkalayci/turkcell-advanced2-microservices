openapi: 3.0.3
info:
  title: Catalog API
  version: 2.0.0
  description: Product catalog service contract (v2)
servers:
  - url: http://localhost:8080/api/v2
tags:
  - name: Catalog
    description: Catalog API
paths:
  /api/v2/products:
    post:
      tags: [CatalogV2]
      summary: Create product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ProductCreateRequestV2' }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ProductResponseV2' }
        '409': { description: Name not unique }

    get:
      tags: [CatalogV2]
      summary: List products (paged)
      operationId: listProducts
      parameters:
        - in: query
          name: page
          schema: { type: integer, minimum: 0, default: 0 }
        - in: query
          name: size
          schema: { type: integer, minimum: 1, maximum: 200, default: 10 }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items: { $ref: '#/components/schemas/ProductResponseV2' }
                  page: { type: integer }
                  size: { type: integer }
                  total: { type: integer, format: int64 }

  /api/v2/products/{id}:
    get:
      tags: [CatalogV2]
      summary: Get product by id
      operationId: getProductById
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ProductResponseV2' }
        '404': { description: Not found }

components:
  schemas:
    MoneyV2:
      type: object
      required: [amount, currency]
      properties:
        amount: { type: string, pattern: '^-?\\d{1,10}(\\.\\d{1,2})?$' }
        currency: { type: string, minLength: 3, maxLength: 8, example: TRY }
    ProductCreateRequestV2:
      type: object
      required: [name, price, stock, picture]
      properties:
        name: { type: string, minLength: 1, maxLength: 255 }
        description: { type: string, maxLength: 2000 }
        price: { $ref: '#/components/schemas/MoneyV2' }
        stock: { type: integer, minimum: 0 }
        picture: { type: string }
    ProductResponseV2:
      type: object
      required: [id, name, price, stock, picture]
      properties:
        id: { type: string, format: uuid }
        name: { type: string }
        description: { type: string }
        price: { $ref: '#/components/schemas/MoneyV2' }
        stock: { type: integer }
        picture: { type: string }
